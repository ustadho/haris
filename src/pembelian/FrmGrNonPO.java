/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pembelian;

import apotek.DlgLookupItemBeli;
import apotek.dao.ItemDao;
import apotek.dao.SatuanDao;
import com.klinik.model.Barang;
import com.klinik.model.Satuan;
import com.klinik.model.SuppBarang;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.awt.KeyboardFocusManager;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.util.List;
import javax.print.DocFlavor;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.HashPrintServiceAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.PrintServiceAttributeSet;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import main.GeneralFunction;
import main.MainForm;
import main.SysConfig;

/**
 *
 * @author cak-ust
 */
public class FrmGrNonPO extends javax.swing.JInternalFrame {

    private Connection conn;
    private GeneralFunction fn = new GeneralFunction();
    private SatuanDao satuanDao = new SatuanDao();
    private ItemDao itemDao = new ItemDao();
    private List<Satuan> satuans;
    private DlgLookupItemBeli lookupItem = new DlgLookupItemBeli(JOptionPane.getFrameForComponent(this), true);
    private Component aThis;

    /**
     * Creates new form FrmGrNonPO
     */
    public FrmGrNonPO() {
        initComponents();
        MyKeyListener kListener = new MyKeyListener();
        fn.addKeyListenerInContainer(jPanel1, kListener, txtFocusListener);
        fn.addKeyListenerInContainer(jPanel2, kListener, txtFocusListener);
        tblItem.addKeyListener(kListener);

        MaskFormatter fmttgl = null;
        try {
            fmttgl = new MaskFormatter("##/##/##");
        } catch (java.text.ParseException e) {
        }

        JFormattedTextField jFDate1 = new JFormattedTextField(fmttgl);
        jFExpDate.setFormatterFactory(jFDate1.getFormatterFactory());
    }

    public void setConn(Connection c) {
        this.conn = c;
        fn.setConn(conn);
    }

    private void initForm() {
        aThis = this;
        satuans = satuanDao.findAll();
        cmbSatuan.removeAllItems();
        for (Satuan x : satuans) {
            cmbSatuan.addItem(x.getNama());
        }
        lookupItem.setConn(conn);
        tblItem.getColumn("#").setPreferredWidth(lblNo.getWidth());
        tblItem.getColumn("Kode").setPreferredWidth(txtProductId.getWidth());
        tblItem.getColumn("Nama Barang").setPreferredWidth(lblNamaBarang.getWidth());
        tblItem.getColumn("Qty").setPreferredWidth(txtQty.getWidth());
        tblItem.getColumn("Satuan").setPreferredWidth(cmbSatuan.getWidth());
        tblItem.getColumn("Harga").setPreferredWidth(txtHarga.getWidth());
        tblItem.getColumn("Disc").setPreferredWidth(txtDisc.getWidth());
        tblItem.getColumn("PPn").setPreferredWidth(txtPPn.getWidth());
        tblItem.getColumn("Sub Total").setPreferredWidth(lblSubTotal.getWidth());
        tblItem.setRowHeight(22);
        tblItem.setFont(txtProductId.getFont());
    }

    private void lookupItem() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        chkConsignment = new javax.swing.JCheckBox();
        jToolBar1 = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtSite = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRemark = new javax.swing.JTextField();
        lblSite = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblSupplier = new javax.swing.JLabel();
        txtSupplier = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtNoSJ = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtReceiptBy = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtNoGR = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtQty = new javax.swing.JTextField();
        lblNamaBarang = new javax.swing.JLabel();
        txtProductId = new javax.swing.JTextField();
        cmbSatuan = new javax.swing.JComboBox();
        txtHarga = new javax.swing.JTextField();
        txtDisc = new javax.swing.JTextField();
        txtPPn = new javax.swing.JTextField();
        lblSubTotal = new javax.swing.JLabel();
        btnAddItem = new javax.swing.JButton();
        txtKonv = new javax.swing.JTextField();
        lblSatuanKecil = new javax.swing.JLabel();
        lblNo = new javax.swing.JLabel();
        jFExpDate = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Penerimaan Non PO");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 153));
        jLabel16.setText("Pembelian");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(447, 20, 325, 44);

        chkConsignment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkConsignment.setText("Konsinyasi");
        chkConsignment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkConsignmentItemStateChanged(evt);
            }
        });
        chkConsignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkConsignmentActionPerformed(evt);
            }
        });
        getContentPane().add(chkConsignment);
        chkConsignment.setBounds(235, 25, 79, 23);

        jToolBar1.setRollover(true);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icon/buttons/add-32.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNew);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icon/buttons/Ok-32.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSave);

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icon/buttons/print-32.png"))); // NOI18N
        btnPrint.setText("Print");
        btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrint.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPrint);

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icon/buttons/exit-32.png"))); // NOI18N
        btnCancel.setText("Exit");
        btnCancel.setFocusable(false);
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCancel);

        getContentPane().add(jToolBar1);
        jToolBar1.setBounds(0, 0, 171, 60);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("Gudang");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, 90, 20));

        txtSite.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtSite.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtSite.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtSite.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSiteFocusLost(evt);
            }
        });
        txtSite.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSiteKeyReleased(evt);
            }
        });
        jPanel1.add(txtSite, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 85, 60, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Catatan");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 90, 20));

        txtRemark.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtRemark.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtRemark.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtRemark.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRemarkFocusLost(evt);
            }
        });
        txtRemark.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRemarkKeyReleased(evt);
            }
        });
        jPanel1.add(txtRemark, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 390, 20));

        lblSite.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblSite.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblSite.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblSitePropertyChange(evt);
            }
        });
        jPanel1.add(lblSite, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 85, 260, 20));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText(":");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 10, 20));

        lblSupplier.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblSupplier.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblSupplier.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblSupplierPropertyChange(evt);
            }
        });
        jPanel1.add(lblSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 260, 20));

        txtSupplier.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtSupplier.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtSupplier.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtSupplier.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSupplierFocusLost(evt);
            }
        });
        txtSupplier.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSupplierKeyReleased(evt);
            }
        });
        jPanel1.add(txtSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 60, 20));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("Supplier");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 20));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText(":");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 85, 10, 20));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText(":");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 10, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("No. Invoice");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, 90, 20));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText(":");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 35, 10, 20));

        txtNoSJ.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtNoSJ.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtNoSJ.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNoSJ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNoSJFocusLost(evt);
            }
        });
        txtNoSJ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoSJKeyReleased(evt);
            }
        });
        jPanel1.add(txtNoSJ, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 35, 220, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Tanggal");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 30, 70, 20));

        txtDate.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDate.setEnabled(false);
        txtDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateFocusLost(evt);
            }
        });
        txtDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDateKeyReleased(evt);
            }
        });
        jPanel1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 30, 90, 20));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Receipt #");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 80, 20));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Diinput Oleh");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 85, 20));

        txtReceiptBy.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtReceiptBy.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtReceiptBy.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtReceiptBy.setEnabled(false);
        txtReceiptBy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReceiptByFocusLost(evt);
            }
        });
        txtReceiptBy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtReceiptByKeyReleased(evt);
            }
        });
        jPanel1.add(txtReceiptBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, 120, 20));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText(":");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, 10, 20));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText(":");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 50, 10, 20));

        txtNoGR.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtNoGR.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtNoGR.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNoGR.setEnabled(false);
        txtNoGR.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNoGRFocusLost(evt);
            }
        });
        txtNoGR.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtNoGRPropertyChange(evt);
            }
        });
        txtNoGR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoGRKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoGRKeyTyped(evt);
            }
        });
        txtNoGR.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                txtNoGRVetoableChange(evt);
            }
        });
        jPanel1.add(txtNoGR, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 120, 20));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText(":");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 10, 20));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(5, 60, 1015, 115);

        jPanel2.setLayout(null);

        txtQty.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQty.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtQty.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtQty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQtyFocusLost(evt);
            }
        });
        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtyKeyReleased(evt);
            }
        });
        jPanel2.add(txtQty);
        txtQty.setBounds(435, 10, 40, 25);

        lblNamaBarang.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblNamaBarang.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblNamaBarang.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblNamaBarangPropertyChange(evt);
            }
        });
        jPanel2.add(lblNamaBarang);
        lblNamaBarang.setBounds(105, 10, 330, 25);

        txtProductId.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtProductId.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtProductId.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtProductId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProductIdFocusLost(evt);
            }
        });
        txtProductId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductIdKeyReleased(evt);
            }
        });
        jPanel2.add(txtProductId);
        txtProductId.setBounds(30, 10, 75, 25);

        cmbSatuan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(cmbSatuan);
        cmbSatuan.setBounds(475, 10, 70, 25);

        txtHarga.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtHarga.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtHarga.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtHarga.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtHarga.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHargaFocusLost(evt);
            }
        });
        txtHarga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHargaKeyReleased(evt);
            }
        });
        jPanel2.add(txtHarga);
        txtHarga.setBounds(545, 10, 80, 25);

        txtDisc.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtDisc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDisc.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtDisc.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtDisc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDiscFocusLost(evt);
            }
        });
        txtDisc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiscKeyReleased(evt);
            }
        });
        jPanel2.add(txtDisc);
        txtDisc.setBounds(625, 10, 40, 25);

        txtPPn.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtPPn.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPPn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtPPn.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtPPn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPPnFocusLost(evt);
            }
        });
        txtPPn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPPnKeyReleased(evt);
            }
        });
        jPanel2.add(txtPPn);
        txtPPn.setBounds(665, 10, 40, 25);

        lblSubTotal.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblSubTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubTotal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblSubTotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblSubTotalPropertyChange(evt);
            }
        });
        jPanel2.add(lblSubTotal);
        lblSubTotal.setBounds(705, 10, 95, 25);

        btnAddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Icon/buttons/Ok-32.png"))); // NOI18N
        btnAddItem.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });
        jPanel2.add(btnAddItem);
        btnAddItem.setBounds(965, 5, 45, 30);

        txtKonv.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtKonv.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtKonv.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtKonv.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKonvFocusLost(evt);
            }
        });
        txtKonv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKonvKeyReleased(evt);
            }
        });
        jPanel2.add(txtKonv);
        txtKonv.setBounds(880, 10, 35, 25);

        lblSatuanKecil.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblSatuanKecil.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblSatuanKecil.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblSatuanKecilPropertyChange(evt);
            }
        });
        jPanel2.add(lblSatuanKecil);
        lblSatuanKecil.setBounds(915, 10, 45, 25);

        lblNo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblNo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblNo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblNoPropertyChange(evt);
            }
        });
        jPanel2.add(lblNo);
        lblNo.setBounds(0, 10, 30, 25);

        jFExpDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jFExpDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jFExpDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel2.add(jFExpDate);
        jFExpDate.setBounds(800, 10, 80, 25);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(5, 175, 1015, 40);

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Kode", "Nama Barang", "Qty", "Satuan", "Harga", "Disc", "PPn", "Sub Total", "Exp. Date", "Konv", "Sat. Kecil"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true, true, true, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblItem.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tblItem);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(5, 215, 1015, 125);

        setBounds(0, 0, 1040, 417);
    }// </editor-fold>//GEN-END:initComponents

    private void chkConsignmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkConsignmentItemStateChanged
    }//GEN-LAST:event_chkConsignmentItemStateChanged

    private void chkConsignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkConsignmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkConsignmentActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        udfNew();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        udfSave();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        printKwitansi(txtNoGR.getText(), false);
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (btnCancel.getText().equalsIgnoreCase("cancel")) {
            btnSave.setEnabled(false);
            btnNew.setEnabled(true);
            btnCancel.setText("Exit");
            //            btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pharpurchase/image/Icon/Exit.png")));
        } else {
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtSiteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSiteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSiteFocusLost

    private void txtSiteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSiteKeyReleased
        fn.lookup(evt, new Object[]{lblSite},
                "select site_id, coalesce(site_name,'') as site_name from phar_site "
                + "where upper(site_id||coalesce(site_name,'')) Like upper('%" + txtSite.getText() + "%') order by 2",
                txtSite.getWidth() + lblSite.getWidth(), 300);
    }//GEN-LAST:event_txtSiteKeyReleased

    private void txtRemarkFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRemarkFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRemarkFocusLost

    private void txtRemarkKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRemarkKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRemarkKeyReleased

    private void lblSitePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblSitePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSitePropertyChange

    private void lblSupplierPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblSupplierPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSupplierPropertyChange

    private void txtSupplierFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSupplierFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSupplierFocusLost

    private void txtSupplierKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupplierKeyReleased
        fn.lookup(evt, new Object[]{lblSupplier}, "select sp.kode_supplier, coalesce(sp.nama_supplier,'') as nama_supplier, coalesce(sp.telp,'') as telp,"
                + "coalesce(sp.top,0) as top "
                + "from phar_supplier sp "
                + "where sp.kode_supplier ||coalesce(sp.nama_supplier,'') ||coalesce(sp.telp,'') ilike '%" + txtSupplier.getText() + "%' order by 2",
                txtSupplier.getWidth() + lblSupplier.getWidth(), 200);
    }//GEN-LAST:event_txtSupplierKeyReleased

    private void txtNoSJFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoSJFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoSJFocusLost

    private void txtNoSJKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoSJKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoSJKeyReleased

    private void txtDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateFocusLost

    private void txtDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateKeyReleased

    private void txtReceiptByFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReceiptByFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReceiptByFocusLost

    private void txtReceiptByKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReceiptByKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReceiptByKeyReleased

    private void txtNoGRFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoGRFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoGRFocusLost

    private void txtNoGRPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtNoGRPropertyChange
        btnPrint.setEnabled(txtNoGR.getText().length() > 0);
    }//GEN-LAST:event_txtNoGRPropertyChange

    private void txtNoGRKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoGRKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoGRKeyReleased

    private void txtNoGRKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoGRKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoGRKeyTyped

    private void txtNoGRVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_txtNoGRVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoGRVetoableChange

    private void txtQtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQtyFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyFocusLost

    private void txtQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyKeyReleased

    private void lblNamaBarangPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblNamaBarangPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lblNamaBarangPropertyChange

    private void txtProductIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductIdFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductIdFocusLost

    private void txtProductIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductIdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductIdKeyReleased

    private void txtHargaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHargaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaFocusLost

    private void txtHargaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHargaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHargaKeyReleased

    private void txtDiscFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiscFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiscFocusLost

    private void txtDiscKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiscKeyReleased

    private void txtPPnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPPnFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPPnFocusLost

    private void txtPPnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPPnKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPPnKeyReleased

    private void lblSubTotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblSubTotalPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSubTotalPropertyChange

    private void txtKonvFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKonvFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKonvFocusLost

    private void txtKonvKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKonvKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKonvKeyReleased

    private void lblSatuanKecilPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblSatuanKecilPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSatuanKecilPropertyChange

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        initForm();
    }//GEN-LAST:event_formInternalFrameOpened

    private void lblNoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblNoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_lblNoPropertyChange

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        insertToTable();
    }//GEN-LAST:event_btnAddItemActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox chkConsignment;
    private javax.swing.JComboBox cmbSatuan;
    private javax.swing.JFormattedTextField jFExpDate;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblNamaBarang;
    private javax.swing.JLabel lblNo;
    private javax.swing.JLabel lblSatuanKecil;
    private javax.swing.JLabel lblSite;
    private javax.swing.JLabel lblSubTotal;
    private javax.swing.JLabel lblSupplier;
    private javax.swing.JTable tblItem;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDisc;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtKonv;
    private javax.swing.JTextField txtNoGR;
    private javax.swing.JTextField txtNoSJ;
    private javax.swing.JTextField txtPPn;
    private javax.swing.JTextField txtProductId;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtReceiptBy;
    private javax.swing.JTextField txtRemark;
    private javax.swing.JTextField txtSite;
    private javax.swing.JTextField txtSupplier;
    // End of variables declaration//GEN-END:variables

    private void udfNew() {
        txtSupplier.setText("");
        txtNoGR.setText("");
        txtDate.setText("");
        txtRemark.setText("");
        txtNoSJ.setText("");
        ((DefaultTableModel) tblItem.getModel()).setNumRows(0);
        clearItemText();
    }

    private void clearItemText() {
        txtProductId.setText("");
        lblNamaBarang.setText("");
        txtQty.setText("1");
        txtDisc.setText("0");
        txtPPn.setText("10");
        lblSubTotal.setText("0");
    }

    private void udfSave() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void udfLoadItemDetail() {
        Barang i = itemDao.getBarangByKode(txtProductId.getText());
        if (i != null) {
            lblNamaBarang.setText(i.getNamaPaten());
            lblSatuanKecil.setText(satuanDao.findById(i.getSatuanKecil()).getNama());

            SuppBarang sb = itemDao.getSuppBarang(txtProductId.getText(), txtSupplier.getText());
            if (sb != null) {
                cmbSatuan.setSelectedItem(sb.getUomAlt());
                txtHarga.setText(fn.intFmt.format(sb.getPrice()));
                txtDisc.setText(fn.dFmt.format(sb.getDisc()));
                txtPPn.setText(fn.dFmt.format(sb.getVat()));
                txtKonv.setText(fn.intFmt.format(sb.getConvertion()));
                lblSubTotal.setText(txtHarga.getText());
            } else {
                clearItem();
            }
            txtQty.setText(txtQty.getText().equalsIgnoreCase("") ? "1" : txtQty.getText());
        }
    }

    private void printKwitansi(String sNo_PR, Boolean okCpy) {
        try {
            PrinterJob job = PrinterJob.getPrinterJob();
            SysConfig sy = new SysConfig();

            DocFlavor flavor = DocFlavor.SERVICE_FORMATTED.PRINTABLE;
            PrintRequestAttributeSet aset = new HashPrintRequestAttributeSet();
            PrintServiceAttributeSet pset = new HashPrintServiceAttributeSet();
            PrintService[] services = PrintServiceLookup.lookupPrintServices(flavor, null);
            int i = 0;
            for (i = 0; i < services.length; i++) {
                if (services[i].getName().equalsIgnoreCase(sy.getPrintKwtName())) {
                    break;
                }
            }
            if (JOptionPane.showConfirmDialog(null, "Simpan Good Receipt Sukses. Selanjutnya akan di Print!", "SGHS Go Open Source", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                PrintGood_receipt pn = new PrintGood_receipt(conn, txtNoGR.getText(), false, MainForm.sUserName, services[i]);
            }
        } catch (java.lang.NullPointerException nu) {
            JOptionPane.showMessageDialog(this, nu.getMessage());
        }
    }
    private FocusListener txtFocusListener = new FocusListener() {
        public void focusGained(FocusEvent e) {
            if (e.getSource() instanceof JTextField || e.getSource() instanceof JFormattedTextField) {
                ((JTextField) e.getSource()).setBackground(Color.YELLOW);
                if ((e.getSource() instanceof JTextField && ((JTextField) e.getSource()).getName() != null && ((JTextField) e.getSource()).getName().equalsIgnoreCase("textEditor"))) {
                    ((JTextField) e.getSource()).setSelectionStart(0);
                    ((JTextField) e.getSource()).setSelectionEnd(((JTextField) e.getSource()).getText().length());
                }
            }
        }

        public void focusLost(FocusEvent e) {
            if (e.getSource().getClass().getSimpleName().equalsIgnoreCase("JTextField")
                    || e.getSource().getClass().getSimpleName().equalsIgnoreCase("JFormattedTextField")) {
                ((JTextField) e.getSource()).setBackground(Color.WHITE);

                if (e.getSource().equals(txtProductId) && !fn.isListVisible()) {
                    udfLoadItemDetail();
                }
                if (e.getSource().equals(txtQty) || e.getSource().equals(txtHarga) || e.getSource().equals(txtDisc) || e.getSource().equals(txtPPn)) {
                    setTotalItem();
                }
            }
        }
    };

    private void setTotalItem() {
        double total = fn.udfGetInt(txtQty.getText())
                * fn.udfGetDouble(txtHarga.getText())
                * (1 - fn.udfGetDouble(txtDisc.getText()) / 100)
                * (1 + fn.udfGetDouble(txtPPn.getText()) / 100);
        lblSubTotal.setText(fn.intFmt.format(total));
    }

    private void clearItem() {
        txtProductId.setText("");
        lblNamaBarang.setText("");
        cmbSatuan.setSelectedItem("-");
        txtHarga.setText("0");
        txtDisc.setText("0");
        txtPPn.setText("0");
        txtKonv.setText("0");
        lblSubTotal.setText("0");
    }

    public class MyKeyListener extends KeyAdapter {

        @Override
        public void keyTyped(java.awt.event.KeyEvent evt) {
//          if(evt.getSource().equals(tblPR)){
//              if(tblPR.getSelectedColumn()!=tblPR.getColumnModel().getColumnIndex("On Receipt") && stMinus){
//                  evt.consume();
//                  return;
//              }
//          }
            if (evt.getSource() instanceof JTextField
                    && ((JTextField) evt.getSource()).getName() != null
                    && ((JTextField) evt.getSource()).getName().equalsIgnoreCase("textEditor")) {
                ((JTextField) evt.getSource()).setEditable(tblItem.getSelectedColumn() == tblItem.getColumnModel().getColumnIndex("On Receipt"));
            }

            if (evt.getSource() instanceof JTextField
                    && ((JTextField) evt.getSource()).getName() != null
                    && ((JTextField) evt.getSource()).getName().equalsIgnoreCase("textEditor")
                    && !(tblItem.getSelectedColumn() == tblItem.getColumnModel().getColumnIndex("Expired"))) {

//              if((tblPR.getSelectedColumn()!=tblPR.getColumnModel().getColumnIndex("On Receipt"))){
//                  if(stMinus){
//                      evt.consume();
//                      return;
//                  }
//              }
//              char c = evt.getKeyChar();
//              if (!((c >= '0' && c <= '9')) &&
//                    (c != KeyEvent.VK_BACK_SPACE) &&
//                    (c != KeyEvent.VK_DELETE) &&
//                    (c != KeyEvent.VK_ENTER) &&
//                    (c != '-') && (c != '.')) {
//                    getToolkit().beep();
//                    evt.consume();
//                    return;
//              }
                fn.keyTyped(evt);
            }

        }

        @Override
        public void keyPressed(KeyEvent evt) {
            Component ct = KeyboardFocusManager.getCurrentKeyboardFocusManager().getPermanentFocusOwner();
            int keyKode = evt.getKeyCode();
            switch (keyKode) {
                case KeyEvent.VK_ENTER: {
                    if (!(ct instanceof JTable)) {
                        if (!fn.isListVisible()) {
                            Component c = findNextFocus();
                            if (c == null) {
                                return;
                            }
                            c.requestFocus();
                        } else {
                            fn.lstRequestFocus();
                        }
                    }
                    break;
                }
                case KeyEvent.VK_DOWN: {
                    if (!(ct.getClass().getSimpleName().equalsIgnoreCase("JTABLE"))) {
                        if (!fn.isListVisible()) {
                            Component c = findNextFocus();
                            if (c == null) {
                                return;
                            }
                            c.requestFocus();
                        } else {
                            fn.lstRequestFocus();
                        }
                        break;
                    }
                }

                case KeyEvent.VK_UP: {
                    if (!(evt.getSource() instanceof JTable)) {
                        Component c = findPrevFocus();
                        c.requestFocus();
                    }
                    break;
                }
                case KeyEvent.VK_ESCAPE: {
                    if (JOptionPane.showConfirmDialog(null, "Anda Yakin Untuk Keluar?",
                            "SHS Pharmacy", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        dispose();
                    }
                    break;
                }
                case KeyEvent.VK_F2: {
                    udfSave();
                    break;
                }
                case KeyEvent.VK_DELETE: {
                    if (evt.getSource().equals(tblItem) && tblItem.getSelectedRow() >= 0) {
                        int iRow[] = tblItem.getSelectedRows();
                        int rowPalingAtas = iRow[0];

//                        if(JOptionPane.showConfirmDialog(FrmPO.this,
//                                "Item '"+tblPR.getValueAt(iRow, 3).toString()+"' dihapus dari PO?", "Confirm", JOptionPane.YES_NO_OPTION)==JOptionPane.NO_OPTION)
//                            return;

                        for (int a = 0; a < iRow.length; a++) {
                            ((DefaultTableModel) tblItem.getModel()).removeRow(tblItem.getSelectedRow());
                        }

                        if (tblItem.getRowCount() > 0 && rowPalingAtas < tblItem.getRowCount()) {
                            //if(tblPR.getSelectedRow()>0)
                            tblItem.setRowSelectionInterval(rowPalingAtas, rowPalingAtas);
                        } else {
                            if (tblItem.getRowCount() > 0) {
                                tblItem.setRowSelectionInterval(rowPalingAtas - 1, rowPalingAtas - 1);
                            } else {
                                txtSupplier.requestFocus();
                            }

                        }
                        if (tblItem.getSelectedRow() >= 0) {
                            tblItem.changeSelection(tblItem.getSelectedRow(), 0, false, false);
                        }
                    }
                    break;

                }
                case KeyEvent.VK_INSERT: {
                    if (txtSupplier.getText().trim().length() == 0) {
                        JOptionPane.showMessageDialog(aThis, "Silakan masukkan supplier terlebih dulu!", "Information", JOptionPane.INFORMATION_MESSAGE);
                        if (!txtSupplier.isFocusOwner()) {
                            txtSupplier.requestFocusInWindow();
                            return;
                        }
                    }
                    if (tblItem.getCellEditor() != null && evt.getSource().equals(tblItem)) {
                        tblItem.getCellEditor().stopCellEditing();
                    }

                    lookupItem.setAlwaysOnTop(true);
                    //lookupItem.setSrcTable(table, table.getColumnModel().getColumnIndex("Qty"));
                    lookupItem.setKeyEvent(evt);
                    lookupItem.setObjForm(this);
                    lookupItem.setVisible(true);
                    lookupItem.clearText();
                    lookupItem.requestFocusInWindow();
                    if (lookupItem.getKodeBarang().length() > 0) {
                        txtProductId.setText(lookupItem.getKodeBarang());
//                            String sMsg=udfLoadItem();
                        //txtQty.requestFocus();
                        udfLoadItemDetail();
                        txtQty.requestFocus();
                    }

                    break;
                }

            }
        }

        @Override
        public void keyReleased(KeyEvent evt) {
//            if(evt.getSource().equals(tblItem) && tblItem.getSelectedRow()>=0){
//                if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_C && evt.getModifiersEx()==java.awt.event.KeyEvent.CTRL_DOWN_MASK){
//                    if(fn.udfGetInt(tblItem.getValueAt(tblItem.getSelectedRow(), tblItem.getColumnModel().getColumnIndex("On Receipt")))<=1){
//                        JOptionPane.showMessageDialog(FrmGoodReceipt.this, "Qty on Receipt <= 1 baris tidak bisa dicopy!");
//                        tableCopyRow=null;
//                        return;
//                    }
//                    copyTable();
//                }
//                if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_V && evt.getModifiersEx()==java.awt.event.KeyEvent.CTRL_DOWN_MASK){
//                    if(tableCopyRow==null){
//                        JOptionPane.showMessageDialog(FrmGoodReceipt.this, "Tabel item belum di-copy! Klik pada item kemudian tekan Ctrl+C terlebih dulu!");
//                        return;
//                    }
//                    pasteTable();
//                }
//            }
        }
//        @Override
//        public void keyReleased(KeyEvent evt){
//            if(evt.getSource().equals(txtDisc)||evt.getSource().equals(txtQty)||evt.getSource().equals(txtUnitPrice))
//                GeneralFunction.keyTyped(evt);
//        }

        public Component findNextFocus() {
            // Find focus owner
            Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
            Container root = c == null ? null : c.getFocusCycleRootAncestor();

            if (root != null) {
                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
                Component nextFocus = policy.getComponentAfter(root, c);
                if (nextFocus == null) {
                    nextFocus = policy.getDefaultComponent(root);
                }
                return nextFocus;
            }
            return null;
        }

        public Component findPrevFocus() {
            // Find focus owner
            Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
            Container root = c == null ? null : c.getFocusCycleRootAncestor();

            if (root != null) {
                FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
                Component prevFocus = policy.getComponentBefore(root, c);
                if (prevFocus == null) {
                    prevFocus = policy.getDefaultComponent(root);
                }
                return prevFocus;
            }
            return null;
        }
    }

    private void insertToTable() {
        btnAddItem.requestFocusInWindow();
        if (txtProductId.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Silahkan isi kode barang terlebih dulu.\nTekan Tombol Insert atau masukkan kode barang");
            txtProductId.requestFocus();
            return;
        }
        if (fn.udfGetInt(txtQty.getText()) == 0) {
            JOptionPane.showMessageDialog(this, "Qty masih Nol!");
            txtQty.requestFocus();
            return;
        }
        if (fn.udfGetInt(txtHarga.getText()) == 0) {
            JOptionPane.showMessageDialog(this, "Harga masih Nol!");
            txtHarga.requestFocus();
            return;
        }
        ((DefaultTableModel) tblItem.getModel()).addRow(new Object[]{
            tblItem.getRowCount() + 1,
            txtProductId.getText(),
            lblNamaBarang.getText(),
            fn.udfGetInt(txtQty.getText()),
            cmbSatuan.getSelectedItem().toString(),
            fn.udfGetInt(txtHarga.getText()),
            fn.udfGetInt(txtDisc.getText()),
            fn.udfGetInt(txtPPn.getText()),
            fn.udfGetInt(lblSubTotal.getText()),
            jFExpDate.getText(),
            fn.udfGetInt(txtKonv.getText()),
            lblSatuanKecil.getText()
        });
        clearItem();

    }
}
