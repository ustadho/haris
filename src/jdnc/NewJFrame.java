/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on May 26, 2010, 9:25:36 AM
 */

package jdnc;

import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import org.jdesktop.swingx.autocomplete.ComboBoxCellEditor;

/**
 *
 * @author cak-ust
 */
public class NewJFrame extends javax.swing.JFrame {
    JTableComboBox jTableComboBox2;
    String[] columnNames = {"First Name", "Last Name", "Sport", "# =of Years", "Vegetarian"};
    Object[][] data = {
        {"Mary", "Campione", "Snowboarding", new Integer(5), Boolean.FALSE},
        {"Alison", "Huml", "Rowing", new Integer(3), Boolean.TRUE},
        {"Kathy", "Walrath", "Knitting", new Integer(2), Boolean.FALSE},
        {"Sharon", "Zakhour", "Speed reading", new Integer(20),Boolean.TRUE},
        {"Philip", "Milne", "Pool", new Integer(10), Boolean.FALSE},
        {"Mike", "Summers", "Tennis", new Integer(1), Boolean.TRUE},
        {"Merissa", "Atwood", "Golf", new Integer(14), Boolean.FALSE},
        };

    /** Creates new form NewJFrame */
    public NewJFrame() {
        initComponents();

        
        // MyTableModel only overrides getColumnClass to demonstrate =JCheckBox rendering;
        TableModel tableModel = new MyTableModel(data, columnNames);
        jTableComboBox1.setModel(tableModel, 1);
        try {
            jTableComboBox2=new JTableComboBox(tableModel, 1);
        } catch (IncompatibleLookAndFeelException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        AutoCompleteDecorator.decorate(jTableComboBox2);
        jTable1.setSurrendersFocusOnKeystroke(true);
        try{
            jTable1.getColumnModel().getColumn(0).setCellEditor(createCellEditor());
        }catch(IncompatibleLookAndFeelException se){

        }
        
    }

    static class MyTableModel extends DefaultTableModel {
        public MyTableModel(Object[][] data, Object[] columnNames) {
            super(data,columnNames);
        }
        public Class getColumnClass(int columnIndex) {
            return getValueAt(0, columnIndex).getClass();
        }
        public boolean isCellEditable(int row, int columnIndex) {
            return false;
        }
    }

    private TableCellEditor createCellEditor()  throws IncompatibleLookAndFeelException{
        TableModel tableModel = new MyTableModel(data, columnNames);
        //try{
        JTableComboBox combo = new JTableComboBox(tableModel, 0)  {
            @Override
            protected boolean processKeyBinding(KeyStroke ks, KeyEvent e,
                    int condition, boolean pressed) {
                boolean retValue = super.processKeyBinding(ks, e, condition, pressed);

                if (!retValue && isStartingCellEdit() && editor != null) {
                    // this is where the magic happens
                    // not quite right; sets the value, but doesn't advance the
                    // cursor position for AC
                    editor.setItem(String.valueOf(ks.getKeyChar()));
                }

                return retValue;
            }

            private boolean isStartingCellEdit() {
                JTable table = (JTable) SwingUtilities.getAncestorOfClass(
                        JTable.class, this);

                return table != null
                        && table.isFocusOwner()
                        && !Boolean.FALSE.equals((Boolean) table
                                .getClientProperty("JTable.autoStartsEdit"));
            }
        };
//        }catch(IncompatibleLookAndFeelException se){
//
//        }
        AutoCompleteDecorator.decorate(jTableComboBox2);

        return new ComboBoxCellEditor(jTableComboBox2);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        try {
            jTableComboBox1 = new jdnc.JTableComboBox();
        } catch (jdnc.IncompatibleLookAndFeelException e1) {
            e1.printStackTrace();
        }
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableComboBox1.setEditable(true);
        jTableComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTableComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTableComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private jdnc.JTableComboBox jTableComboBox1;
    // End of variables declaration//GEN-END:variables

}
