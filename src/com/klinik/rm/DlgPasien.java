/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.klinik.rm;

import com.klinik.dao.PasienDao;
import com.klinik.dao.RegistrasiDao;
import com.klinik.dao.ReservasiDao;
import com.klinik.model.Pasien;
import com.klinik.model.Registrasi;
import com.klinik.model.Reservasi;
import com.klinik.model.StatusUpdate;
import com.klinik.model.Usia;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.awt.KeyboardFocusManager;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;
import main.GeneralFunction;

/**
 *
 * @author faheem
 */
public class DlgPasien extends javax.swing.JDialog {
    private Object srcForm;
    private Date tglReservasi;
    private Pasien selectedPasien=null;
    private Reservasi reservasi;
    private PasienDao pasienDao=new PasienDao();
    private RegistrasiDao regDao=new RegistrasiDao();
    private GeneralFunction fn=new GeneralFunction();
    private Component aThis;
    private boolean selected;
    
    /**
     * Creates new form NewJDialog
     */
    public DlgPasien(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        MaskFormatter fmttgl = null;
        try {
            fmttgl = new MaskFormatter("##-##-####");
        } catch (java.text.ParseException e) {}

        JFormattedTextField jFDate1 = new JFormattedTextField(fmttgl);
        txtTglLahir.setFormatterFactory(jFDate1.getFormatterFactory());
        
        MyKeyListener kListener=new MyKeyListener();
        fn.addKeyListenerInContainer(jPanel1, kListener, txtFocusListener);
        btnSimpan.addKeyListener(kListener);
        btnBatal.addKeyListener(kListener);
        setLocationRelativeTo(null);
    }

    public Pasien getSelectedPasien(){
        return this.selectedPasien;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNorm = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAlamat = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTelepon = new javax.swing.JTextField();
        txtTglLahir = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTempatLahir = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtHp = new javax.swing.JTextField();
        txtUsiaTh = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtUsiaBl = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        cmbSex = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        txtNamaKeluarga = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtTelpKeluarga = new javax.swing.JTextField();
        btnLookup = new javax.swing.JButton();
        cmbTItle = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Pasien");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 250, 30));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("NORM");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 75, 20));

        txtNorm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNorm.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNorm.setEnabled(false);
        jPanel1.add(txtNorm, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 10, 90, 22));

        txtNama.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 35, 325, 22));

        jLabel2.setText("Title");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 75, 20));

        jLabel3.setText("Alamat");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 135, 95, 20));

        txtAlamat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtAlamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 135, 325, 22));

        jLabel4.setText("Telp");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 95, 20));

        txtTelepon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtTelepon, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 160, 95, 22));

        txtTglLahir.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtTglLahir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtTglLahir, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 85, 105, 22));

        jLabel5.setText("Jenis Kelamin : ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 115, 110, 20));

        jLabel6.setText("Tmp. Lahir : ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 60, 95, 20));

        txtTempatLahir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtTempatLahir, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 160, 22));

        jLabel7.setText("HP");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 160, 70, 20));

        txtHp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtHp, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 160, 145, 22));

        txtUsiaTh.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtUsiaTh.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtUsiaTh, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 85, 50, 22));

        jLabel8.setText("Th");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 85, 35, 20));

        jLabel9.setText("Usia");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 85, 35, 20));

        jLabel10.setText("Bln");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 85, 35, 20));

        txtUsiaBl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtUsiaBl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.add(txtUsiaBl, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 85, 50, 22));

        jLabel11.setText("Tgl. Lahir");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, 95, 20));

        cmbSex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Laki-laki", "Perempuan" }));
        jPanel1.add(cmbSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 110, 130, -1));

        jLabel12.setText("Nama Keluarga ");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 185, 120, 20));

        txtNamaKeluarga.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtNamaKeluarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 185, 325, 22));

        jLabel13.setText("Telp. Keluarga ");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 110, 20));

        txtTelpKeluarga.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtTelpKeluarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 210, 325, 22));

        btnLookup.setText("...");
        btnLookup.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnLookup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLookupActionPerformed(evt);
            }
        });
        jPanel1.add(btnLookup, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 10, 25, 25));

        cmbTItle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tn", "Ny", "Nn", "Sdr", "An", "By" }));
        jPanel1.add(cmbTItle, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 60, 65, -1));

        jLabel15.setText("Nama");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, 75, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, 470, 240));

        btnSimpan.setText("Simpan");
        btnSimpan.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        getContentPane().add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 120, 35));

        btnBatal.setText("Batal");
        btnBatal.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        getContentPane().add(btnBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 280, 105, 35));

        setBounds(0, 0, 502, 361);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLookupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLookupActionPerformed
        DlgLookupPasien d1=new DlgLookupPasien(JOptionPane.getFrameForComponent(this), true);
        d1.setVisible(true);
        Pasien px=d1.getSelectedPasien();
        if(px !=null){
            isiDataPasien(px);
        }
    }//GEN-LAST:event_btnLookupActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        udfSave();

    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnBatalActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(this.reservasi!=null){
            if(this.reservasi.getPasien()!=null){
                this.selectedPasien=this.reservasi.getPasien();
                isiDataPasien(this.selectedPasien);
                btnLookup.setVisible(false);
            }
        }else{
            if(this.txtNorm.getText().length()>0){
                txtNorm.setEditable(false);
                Pasien px=pasienDao.getPasien(txtNorm.getText());
                if(px!=null){
                    isiDataPasien(px);
                }
            }
        }
        
        aThis=this;
    }//GEN-LAST:event_formWindowOpened

    DateFormat dmy= new SimpleDateFormat("dd-MM-yyyy");
    DateFormat ymd=new SimpleDateFormat("yyyy-MM-dd");
    public void isiDataPasien(Pasien px){
        txtNorm.setText(px.getNorm());
        txtNama.setText(px.getNama());
        txtAlamat.setText(px.getAlamatDomisili());
        cmbSex.setSelectedIndex(px.getJenisKelamin().equalsIgnoreCase("L")? 0: 1);
        txtTempatLahir.setText(px.getTempatLahir());
        txtTglLahir.setText(px.getTanggalLahir()==null?"": dmy.format(px.getTanggalLahir()));
        txtTelepon.setText(px.getTelepon());
        txtHp.setText(px.getHp());
        txtNamaKeluarga.setText(px.getNamaKeluarga());
        txtTelpKeluarga.setText(px.getTeleponKeluarga());
        
        if(px.getTanggalLahir()!=null){
            Usia usia=pasienDao.getUsia(ymd.format(new Date()), ymd.format(px.getTanggalLahir()));
            txtUsiaTh.setText(GeneralFunction.intFmt.format(usia.getTahun()));
            txtUsiaBl.setText(GeneralFunction.intFmt.format(usia.getBulan()));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgPasien dialog = new DlgPasien(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnLookup;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JComboBox cmbSex;
    private javax.swing.JComboBox cmbTItle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAlamat;
    private javax.swing.JTextField txtHp;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNamaKeluarga;
    private javax.swing.JTextField txtNorm;
    private javax.swing.JTextField txtTelepon;
    private javax.swing.JTextField txtTelpKeluarga;
    private javax.swing.JTextField txtTempatLahir;
    private javax.swing.JFormattedTextField txtTglLahir;
    private javax.swing.JFormattedTextField txtUsiaBl;
    private javax.swing.JFormattedTextField txtUsiaTh;
    // End of variables declaration//GEN-END:variables
    
    private boolean udfCekBeforeSave(){
        btnSimpan.requestFocusInWindow();
        if(txtNama.getText().trim().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Silahkan isi nama terlebih dulu!");
            txtNama.requestFocus();
            return false;
        }
        if(txtAlamat.getText().trim().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Silahkan isi alamat terlebih dulu!");
            txtAlamat.requestFocus();
            return false;
        }
        return true;
    }
    
    private void udfSave() {
        if(!udfCekBeforeSave()){
            return;
        }
        try {
            Pasien p=new Pasien();
            p.setNorm(txtNorm.getText().equalsIgnoreCase("")? null: txtNorm.getText());
            p.setTitle(cmbTItle.getSelectedItem().toString());
            p.setNama(txtNama.getText());
            p.setAlamatDomisili(txtAlamat.getText());
            p.setTempatLahir(txtTempatLahir.getText());
            p.setTanggalLahir(new SimpleDateFormat("dd-MM-yyyy").parse(txtTglLahir.getText()));
            p.setJenisKelamin(cmbSex.getSelectedItem().toString().substring(0, 1));
            p.setTelepon(txtTelepon.getText());
            p.setHp(txtHp.getText());
            p.setNamaKeluarga(txtNamaKeluarga.getText());
            p.setTeleponKeluarga(txtTelpKeluarga.getText());
            
            
            if(srcForm==null){
                pasienDao.simpan(p);
                JOptionPane.showMessageDialog(this, "Simpan pasien sukses!");
            }else if(srcForm instanceof FrmReservasi){
                if(selectedPasien!=null && !this.selectedPasien.equals(p)){ //ada perubahan data pasien
                    pasienDao.simpan(p);
                }
                if(this.reservasi==null){
                    this.selectedPasien=p;
                }else{
                    Registrasi reg=new Registrasi();
                    reg.setKodeDokter(this.reservasi.getKodeDokter());
                    reg.setNorm(txtNorm.getText());
                    StatusUpdate st=regDao.save(reg);
                    if(st.isSukses()){
                        JOptionPane.showMessageDialog(this, "Registrasi sukses disimpan dengan nomor '"+st.getNo()+"'!");
                    }else{
                        JOptionPane.showMessageDialog(this, "Registrasi gagal!");
                    }
                    
                }
            }
            this.dispose();
        } catch (ParseException ex) {
            Logger.getLogger(DlgPasien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Registrasi gagal!\n"+ex.getMessage());
        }
    }
    
    
    public void setSrcForm(Object aThis) {
        this.srcForm=aThis;
    }

    public void setTglReservasi(Date date) {
        this.tglReservasi=date;
    }

    void setReservasi(Reservasi x) {
        this.reservasi=x;
    }
    
    private FocusListener txtFocusListener=new FocusListener() {
        public void focusGained(FocusEvent e) {
            if(e.getSource() instanceof JTextField || e.getSource() instanceof JFormattedTextField){
                ((JTextField)e.getSource()).setBackground(Color.YELLOW);
                if(e.getSource() instanceof JTextField){
                    ((JTextField)e.getSource()).setSelectionStart(0);
                    ((JTextField)e.getSource()).setSelectionEnd(((JTextField)e.getSource()).getText().length());
                }else if(e.getSource() instanceof JFormattedTextField){
                    ((JFormattedTextField)e.getSource()).setSelectionStart(0);
                    ((JFormattedTextField)e.getSource()).setSelectionEnd(((JFormattedTextField)e.getSource()).getText().length());
                }

            }
        }

        private SimpleDateFormat ymd=new SimpleDateFormat("yyyy-MM-dd");
        public void focusLost(FocusEvent e) {
            if(e.getSource().getClass().getSimpleName().equalsIgnoreCase("JTextField")||
                    e.getSource().getClass().getSimpleName().equalsIgnoreCase("JFormattedTextField")){
                ((JTextField)e.getSource()).setBackground(Color.WHITE);
                
                if(e.getSource().equals(txtTglLahir)){
                    if(!fn.validateDate(txtTglLahir.getText(), true, "dd-MM-yyyy")){
                        JOptionPane.showMessageDialog(aThis, "Tanggal lahir tidak valid!");
                        txtTglLahir.requestFocus();
                        return;
                    }
                    //20-02-2014
                    String  sTlLahir=txtTglLahir.getText().substring(6, 10)+
                                     txtTglLahir.getText().substring(2, 6)+
                                     txtTglLahir.getText().substring(0, 2);
                    System.out.println("sTlLahir: "+ sTlLahir);
                    Usia u=pasienDao.getUsia(ymd.format(new Date()) , sTlLahir);
                    if(u!=null){
                        txtUsiaTh.setText(fn.intFmt.format(u.getTahun()));
                        txtUsiaBl.setText(fn.intFmt.format(u.getBulan()));
                    }
                            
                }

           }
        }


    } ;

    public void setNorm(String kode) {
        txtNorm.setText(kode);
        btnLookup.setVisible(false);
    }

    public boolean isSelected() {
        return this.selected;
    }

    public String getNama() {
        return txtNama.getText();
    }

    public String getNorm() {
        return txtNorm.getText();
    }

    public String getAlamat() {
        return txtAlamat.getText();
    }

    public class MyKeyListener extends KeyAdapter {
        @Override
        public void keyReleased(KeyEvent evt){

        }

        @Override
        public void keyTyped(KeyEvent evt){
            
        }

        @Override
        public void keyPressed(KeyEvent evt) {
            Component ct = KeyboardFocusManager.getCurrentKeyboardFocusManager().getPermanentFocusOwner();
            int keyKode = evt.getKeyCode();
            switch(keyKode){
                case KeyEvent.VK_F2:{
                    udfSave();
                    break;
                }

                case KeyEvent.VK_ENTER : {
                    if(!(ct instanceof JTable)){
                        if(btnSimpan.isFocusOwner()){
                            udfSave();
                            return;
                        }
                        if (!fn.isListVisible()){
                            Component c = findNextFocus();
                            if (c==null) return;
                            if(c.isEnabled())
                                c.requestFocus();
                            else{
                                c = findNextFocus();
                                if (c!=null) c.requestFocus();;
                            }
                        }else{
                            fn.lstRequestFocus();
                        }
                    }
                    break;
                }
                case KeyEvent.VK_DOWN: {
                    if(ct instanceof JTable){
//                        if(((JTable)ct).getSelectedRow()==0){
////                            Component c = findNextFocus();
////                            if (c==null) return;
////                            if(c.isEnabled())
////                                c.requestFocus();
////                            else{
////                                c = findNextFocus();
////                                if (c!=null) c.requestFocus();;
////                            }
//                        }
                    }else{
                        if (!fn.isListVisible()){
                            Component c = findNextFocus();
                            if (c==null) return;
                            if(c.isEnabled())
                                c.requestFocus();
                            else{
                                c = findNextFocus();
                                if (c!=null) c.requestFocus();;
                            }
                        }else{
                            fn.lstRequestFocus();
                        }
                        break;
                    }
                }

                case KeyEvent.VK_UP: {
                    if(ct instanceof JTable){
                        if(((JTable)ct).getSelectedRow()==0){
                            Component c = findPrevFocus();
                            if (c==null) return;
                            if(c.isEnabled())
                                c.requestFocus();
                            else{
                                c = findPrevFocus();
                                if (c!=null) c.requestFocus();;
                            }
                        }
                    }
                    else{
                        Component c = findPrevFocus();
                        if (c==null) return;
                        if(c.isEnabled())
                            c.requestFocus();
                        else{
//                            c = findPreFocus();
//                            if (c!=null) c.requestFocus();;
                        }
                    }
                    break;
                }

                case KeyEvent.VK_ESCAPE:{

                    break;
                }
            }
        }

//        @Override
//        public void keyReleased(KeyEvent evt){
//            if(evt.getSource().equals(txtDisc)||evt.getSource().equals(txtQty)||evt.getSource().equals(txtUnitPrice))
//                GeneralFunction.keyTyped(evt);
//        }


    }
    public Component findNextFocus() {
        // Find focus owner
        Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
        Container root = c == null ? null : c.getFocusCycleRootAncestor();

        if (root != null) {
            FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
            Component nextFocus = policy.getComponentAfter(root, c);
            if (nextFocus == null) {
                nextFocus = policy.getDefaultComponent(root);
            }
            return nextFocus;
        }
        return null;
    }

    public Component findPrevFocus() {
        // Find focus owner
        Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
        Container root = c == null ? null : c.getFocusCycleRootAncestor();

        if (root != null) {
            FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
            Component prevFocus = policy.getComponentBefore(root, c);
            if (prevFocus == null) {
                prevFocus = policy.getDefaultComponent(root);
            }
            return prevFocus;
        }
        return null;
    }

    
}
